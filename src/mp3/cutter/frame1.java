/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mp3.cutter;

import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Priyam
 */
public class frame1 extends javax.swing.JFrame {
 JFileChooser fc=null;
 int a=0;
 File f=null;
 float flength=0;
 File[] fo=null;
 File f1=null;
 File f2=null;
 File f3=null;
 File f4=null;
 File f5=null;
 File f6=null;
 String oldf="";
 String[] newf;
 long start=0,end=0,interval=0;
 String fpath1="";
 String fpath2="";
 String fpath3="";
 String fpath4="";
 String fpath5="";
 String fpath6="";
 String newfilename="";
 String newfilepath="";
 String fname1="";
 String fname2="";
 String fname3="";
 String fname4="";
 String fname5="";
 String fname6="";
 int  i=0, j=0, r=0, nop=0;
 double d=0 ; double c=0;
 FileInputStream fis=null;
 FileOutputStream fos=null;
 FileOutputStream[] foso=null;
 byte[] b =null;
 Image icon;
 
 String fpath="";
 String fname="";
    /**
     * Creates new form frame1
     */
    public frame1() {
        initComponents();
       Badd.setToolTipText("Click to add a file");
       Bremove.setToolTipText("Click to remove selected file");
       Bapply.setToolTipText("Click to split/merge");
       Bbrowse.setToolTipText("Set output directory");
       Btarget.setToolTipText("Find directory");
       
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane3 = new javax.swing.JTabbedPane();
        PSplitter = new javax.swing.JPanel();
        Lclipname = new javax.swing.JLabel();
        Lname = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Llength = new javax.swing.JLabel();
        Lmb = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        CBPartS = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        TFFilenameS = new javax.swing.JTextField();
        Lnewname = new javax.swing.JLabel();
        LSizeS = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        PJoiner = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableJ = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        TFNewFileJ = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        LNewFileSizeJ = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Loutput = new javax.swing.JTextField();
        Bbrowse = new javax.swing.JButton();
        Btarget = new javax.swing.JButton();
        Badd = new javax.swing.JButton();
        Bremove = new javax.swing.JButton();
        Bapply = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("                                                                                 Mp3 Spiltter/Joiner");
        setFont(new java.awt.Font("Agency FB", 0, 14)); // NOI18N
        addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                formPropertyChange(evt);
            }
        });
        getContentPane().setLayout(null);

        PSplitter.setForeground(new java.awt.Color(255, 255, 153));
        PSplitter.setLayout(null);

        Lclipname.setText("Clip name:");
        PSplitter.add(Lclipname);
        Lclipname.setBounds(34, 33, 77, 25);
        PSplitter.add(Lname);
        Lname.setBounds(153, 33, 179, 25);

        jLabel1.setText("Clip length:");
        PSplitter.add(jLabel1);
        jLabel1.setBounds(34, 69, 67, 22);

        Llength.setText("0.00");
        PSplitter.add(Llength);
        Llength.setBounds(150, 70, 50, 22);

        Lmb.setText("Mb");
        PSplitter.add(Lmb);
        Lmb.setBounds(190, 70, 35, 20);

        jLabel2.setText("No. of parts");
        PSplitter.add(jLabel2);
        jLabel2.setBounds(34, 102, 67, 22);

        CBPartS.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));
        CBPartS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBPartSActionPerformed(evt);
            }
        });
        PSplitter.add(CBPartS);
        CBPartS.setBounds(153, 103, 40, 20);

        jLabel3.setText("New file's name:");
        PSplitter.add(jLabel3);
        jLabel3.setBounds(34, 135, 101, 30);

        TFFilenameS.setText("new");
        PSplitter.add(TFFilenameS);
        TFFilenameS.setBounds(153, 136, 237, 30);

        Lnewname.setText("New file's size");
        PSplitter.add(Lnewname);
        Lnewname.setBounds(30, 184, 110, 30);

        LSizeS.setText("0.00");
        PSplitter.add(LSizeS);
        LSizeS.setBounds(150, 190, 50, 20);

        jLabel6.setText("Mb");
        PSplitter.add(jLabel6);
        jLabel6.setBounds(190, 170, 50, 60);

        jTabbedPane3.addTab("Spiltter", PSplitter);

        TableJ.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Source", "Name"
            }
        ));
        jScrollPane1.setViewportView(TableJ);

        jLabel4.setText("New file name:");

        TFNewFileJ.setText("new");

        jLabel7.setText("new file size:");

        LNewFileSizeJ.setText("0.00");

        jLabel9.setText("mb");

        javax.swing.GroupLayout PJoinerLayout = new javax.swing.GroupLayout(PJoiner);
        PJoiner.setLayout(PJoinerLayout);
        PJoinerLayout.setHorizontalGroup(
            PJoinerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE)
            .addGroup(PJoinerLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(PJoinerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PJoinerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PJoinerLayout.createSequentialGroup()
                        .addComponent(LNewFileSizeJ)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9))
                    .addComponent(TFNewFileJ, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PJoinerLayout.setVerticalGroup(
            PJoinerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PJoinerLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addGroup(PJoinerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(TFNewFileJ, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(PJoinerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LNewFileSizeJ)
                    .addComponent(jLabel9))
                .addGap(0, 33, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Joiner", PJoiner);

        getContentPane().add(jTabbedPane3);
        jTabbedPane3.setBounds(0, 11, 536, 286);

        jLabel10.setText("Output");
        jLabel10.setOpaque(true);
        getContentPane().add(jLabel10);
        jLabel10.setBounds(59, 314, 60, 30);

        Loutput.setText("D:\\ priyam java");
        getContentPane().add(Loutput);
        Loutput.setBounds(155, 311, 270, 31);

        Bbrowse.setText("Browse");
        Bbrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BbrowseActionPerformed(evt);
            }
        });
        getContentPane().add(Bbrowse);
        Bbrowse.setBounds(49, 385, 96, 23);

        Btarget.setText("Set target");
        Btarget.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtargetActionPerformed(evt);
            }
        });
        getContentPane().add(Btarget);
        Btarget.setBounds(208, 382, 111, 29);

        Badd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BaddActionPerformed(evt);
            }
        });
        getContentPane().add(Badd);
        Badd.setBounds(575, 41, 109, 40);

        Bremove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BremoveActionPerformed(evt);
            }
        });
        getContentPane().add(Bremove);
        Bremove.setBounds(575, 130, 109, 40);

        Bapply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BapplyActionPerformed(evt);
            }
        });
        getContentPane().add(Bapply);
        Bapply.setBounds(575, 314, 109, 84);

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mp3/cutter/w1.jpg"))); // NOI18N
        getContentPane().add(jLabel13);
        jLabel13.setBounds(0, 0, 1030, 620);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BaddActionPerformed
        try{      
         fc=new JFileChooser("D:\\priyam java");
          fc.setFileFilter(new FileFilter(){
             @Override
             public boolean accept(File f) {
                return f.getPath().endsWith(".mp3");
             }

            @Override 
             public String getDescription() {
                 return "Music(mp3) files only";
             }
              
          });
          
         
                  
           a=fc.showOpenDialog(this);
          

           if(a==JFileChooser.APPROVE_OPTION && PSplitter.isVisible()==true)
           {
               f1=fc.getSelectedFile();
               fpath1=f1.getPath();
               fname1=f1.getName();
               d=(f1.length() / 1024.0) / 1024.0;
               d = Math.round(d * 100.0)/ 100.0;
               
              
              
               
               
              
               Lname.setText(fname1);
               Llength.setText(Double.toString(d));
             // c=d/((double)(CBPartS.getSelectedIndex()+1));
               // c=CBPartS.getSelectedIndex();
             // LSizeS.setText(Double.toString(c));
           }
           else if(a==JFileChooser.APPROVE_OPTION && PJoiner.isVisible()==true)
           {
               if(i==0 || TableJ.getValueAt(0,0)=="")
               {
                   f1=fc.getSelectedFile();
                   fpath1=f1.getPath();
                   fname1=f1.getName();
                   TableJ.setValueAt(fpath1, 0, 0);
                   TableJ.setValueAt(fname1, 0, 1);
                   i++;
                   d=d + (f1.length())/( 1024.0 * 1024.0);
                    d = Math.round(d * 100.0)/ 100.0;
                    
                   LNewFileSizeJ.setText(Double.toString(d));
               }
               else if(i==1 || TableJ.getValueAt(1,0)=="")
               {
                   f2=fc.getSelectedFile();
                   fpath2=f2.getPath();
                   fname2=f2.getName();
                   TableJ.setValueAt(fpath2, 1, 0);
                   TableJ.setValueAt(fname2, 1, 1);
                   i++;
                   d=d + (f2.length())/( 1024.0 * 1024.0);
                    d = Math.round(d * 100.0)/ 100.0;
                   LNewFileSizeJ.setText(Double.toString(d));
               }
               else if(i==2 || TableJ.getValueAt(2,0)=="")
               {
                   f3=fc.getSelectedFile();
                   fpath3=f3.getPath();
                   fname3=f3.getName();
                   TableJ.setValueAt(fpath3, 2, 0);
                   TableJ.setValueAt(fname3, 2, 1);
                   i++;
                   d=d + (f3.length())/( 1024.0 * 1024.0 );
                    d = Math.round(d * 100.0)/ 100.0;
                   LNewFileSizeJ.setText(Double.toString(d));
               }
               else if(i==3 || TableJ.getValueAt(3,0)=="")
               {
                   f4=fc.getSelectedFile();
                   fpath4=f4.getPath();
                   fname4=f4.getName();
                   TableJ.setValueAt(fpath4, 3, 0);
                   TableJ.setValueAt(fname4, 3, 1);
                   i++;
                   d=d + (f4.length())/( 1024.0 * 1024.0 );
                    d = Math.round(d * 100.0)/ 100.0;
                   LNewFileSizeJ.setText(Double.toString(d));
               }
              else if(i==4 || TableJ.getValueAt(4,0)=="")
               {
                   f5=fc.getSelectedFile();
                   fpath5=f5.getPath();
                   fname5=f5.getName();
                   TableJ.setValueAt(fpath5, 4, 0);
                   TableJ.setValueAt(fname5, 4, 1);
                   i++;
                   d=d + (f5.length())/( 1024.0 * 1024.0);
                    d = Math.round(d * 100.0)/ 100.0;
                   LNewFileSizeJ.setText(Double.toString(d));
               }
               else{
                   JOptionPane.showMessageDialog(this,"Not more than 5 files can be joined");
               }
                   
           }
        }catch(Exception e){
            System.out.println("Error");
                       
        

               
               
              
           }
      
    }//GEN-LAST:event_BaddActionPerformed

    private void BbrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BbrowseActionPerformed
        
          fc=new JFileChooser("D:\\priyam java");
          fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
           a=fc.showOpenDialog(this);
           if(a==JFileChooser.APPROVE_OPTION)
           {
               f=fc.getSelectedFile();
               fpath=f.getPath();
               Loutput.setText(fpath);
           }
                    
          
    }//GEN-LAST:event_BbrowseActionPerformed

    private void BtargetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtargetActionPerformed
       String target=Loutput.getText();
       fc=new JFileChooser(target);
       fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
       a=fc.showOpenDialog(this);
       if(a==JFileChooser.APPROVE_OPTION){
        f=fc.getSelectedFile();
        
        fpath=f.getPath();
        Loutput.setText(fpath);
       }
       
    }//GEN-LAST:event_BtargetActionPerformed

    private void BapplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BapplyActionPerformed
        try{
            if(PSplitter.isVisible()==true){
                nop=Integer.parseInt(CBPartS.getSelectedItem().toString());
                fis=new FileInputStream(f1);
                foso=new FileOutputStream[nop];
                fo=new File[nop];
                newf=new String[nop];
                newfilename=TFFilenameS.getText();
                newfilepath=Loutput.getText();
                interval=f1.length()/nop;
                start=0;
                end=interval;
                b=new byte[1];
                for(int k=0; k < nop; k++)
                {
                    newf[k]=newfilepath+"\\"+newfilename+k+".mp3";
                    fo[k]=new File(newf[k]);
                    foso[k]=new FileOutputStream(fo[k]);
                    for(long l= start; l< end; l++)
                    {
                        fis.read(b);
                        foso[k].write(b);
                    }
                    foso[k].flush();
                    foso[k].close();
                    start=end;
                    end=end+interval;
                }
                JOptionPane.showMessageDialog(this,"File Splitted into "+ nop + " parts");
            }
            if(PJoiner.isVisible()==true)
            {
                fname6=TFNewFileJ.getText();
                fpath6=Loutput.getText();
                f6=new File(fpath6+ "\\"+fname6+".mp3");
                if(i==2)
                {
                    fis= new FileInputStream(f1);
                    fos= new FileOutputStream(f6,true);
                    b=new byte[1000];
                    j=0;
                    while((j=fis.read(b))!=-1)
                    {
                        fos.write(b);
                    }
                    fis.close();
                    fis=new FileInputStream(f2);
                    b=new byte[1000];
                    j=0;
                    while((j=fis.read(b))!=-1)
                    {
                        fos.write(b);
                    }
                    fis.close();
                    fos.flush();
                    fos.close();
                    JOptionPane.showMessageDialog(this,"2 files joined sucessfully");
                }
                else if(i==3)
                {
                    fis= new FileInputStream(f1);
                    fos= new FileOutputStream(f6,true);
                    b=new byte[1000];
                    j=0;
                    while((j=fis.read(b))!=-1)
                    {
                        fos.write(b);
                    }
                    fis.close();
                    fis=new FileInputStream(f2);
                    b=new byte[1000];
                    j=0;
                    while((j=fis.read(b))!=-1)
                    {
                        fos.write(b);
                    }
                    fis=new FileInputStream(f3);
                    b=new byte[1000];
                    j=0;
                    while((j=fis.read(b))!=-1)
                    {
                        fos.write(b);
                    }
                    fis.close();
                    fos.flush();
                    fos.close();
                    JOptionPane.showMessageDialog(this,"3 files joined sucessfully");
                }
                else if(i==4)
                {
                    fis= new FileInputStream(f1);
                    fos= new FileOutputStream(f6,true);
                    b=new byte[1000];
                    j=0;
                    while((j=fis.read(b))!=-1)
                    {
                        fos.write(b);
                    }
                    fis.close();
                    fis=new FileInputStream(f2);
                    b=new byte[1000];
                    j=0;
                    while((j=fis.read(b))!=-1)
                    {
                        fos.write(b);
                    }
                    fis=new FileInputStream(f3);
                    b=new byte[1000];
                    j=0;
                    while((j=fis.read(b))!=-1)
                    {
                        fos.write(b);
                    }
                     fis=new FileInputStream(f4);
                    b=new byte[1000];
                    j=0;
                    while((j=fis.read(b))!=-1)
                    {
                        fos.write(b);
                    }
                    fis.close();
                    fos.flush();
                    fos.close();
                    JOptionPane.showMessageDialog(this,"4 files joined sucessfully");
                }
                  else if(i==5)
                {
                    fis= new FileInputStream(f1);
                    fos= new FileOutputStream(f6,true);
                    b=new byte[1000];
                    j=0;
                    while((j=fis.read(b))!=-1)
                    {
                        fos.write(b);
                    }
                    fis.close();
                    fis=new FileInputStream(f2);
                    b=new byte[1000];
                    j=0;
                    while((j=fis.read(b))!=-1)
                    {
                        fos.write(b);
                    }
                    fis=new FileInputStream(f3);
                    b=new byte[1000];
                    j=0;
                    while((j=fis.read(b))!=-1)
                    {
                        fos.write(b);
                    }
                     fis=new FileInputStream(f4);
                    b=new byte[1000];
                    j=0;
                    while((j=fis.read(b))!=-1)
                    {
                        fos.write(b);
                    }
                     fis=new FileInputStream(f5);
                    b=new byte[1000];
                    j=0;
                    while((j=fis.read(b))!=-1)
                    {
                        fos.write(b);
                    }
                    fis.close();
                    fos.flush();
                    fos.close();
                    JOptionPane.showMessageDialog(this,"5 files joined sucessfully");
                }else {
                      JOptionPane.showMessageDialog(this,"2 or more files must be added","Alert",JOptionPane.ERROR_MESSAGE);
                
                  }
                
                
            }
        } catch (Exception e) {
         System.out.println(e);
         System.out.println(e.getMessage());
     }
    }//GEN-LAST:event_BapplyActionPerformed

    private void formPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_formPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_formPropertyChange

    private void BremoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BremoveActionPerformed
      if (PSplitter.isVisible()==true)
      {
          Lname.setText("");
          Llength.setText("0.00");
          TFFilenameS.setText("new");
          LSizeS.setText("0.00");
      }else if(PJoiner.isVisible()==true)
      {
          r=TableJ.getSelectedRow();
          TableJ.setValueAt("",r,0);
          TableJ.setValueAt("", r, 1);
          i--;
          if(r==0)
          {
              d=d-(f1.length())/( 1024.0 * 1024.0);
               d = Math.round(d * 100.0)/ 100.0;
              LNewFileSizeJ.setText(Double.toString(d));
          }
          else if(r==1)
          {
               d=d-(f2.length())/( 1024.0 * 1024.0);
                d = Math.round(d * 100.0)/ 100.0;
              LNewFileSizeJ.setText(Double.toString(d));
          }
           else if(r==2)
          {
               d=d-(f3.length())/( 1024.0 * 1024.0);
                d = Math.round(d * 100.0)/ 100.0;
              LNewFileSizeJ.setText(Double.toString(d));
          }
           else if(r==3)
          {
               d=d-(f4.length())/( 1024.0 * 1024.0);
                d = Math.round(d * 100.0)/ 100.0;
              LNewFileSizeJ.setText(Double.toString(d));
          }
           else if(r==4)
          {
               d=d-(f5.length())/( 1024.0 * 1024.0);
                d = Math.round(d * 100.0)/ 100.0;
              LNewFileSizeJ.setText(Double.toString(d));
          }
      }
    
          
      
      
    }//GEN-LAST:event_BremoveActionPerformed

    private void CBPartSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBPartSActionPerformed
        c=d/(CBPartS.getSelectedIndex()+1);
               // c=CBPartS.getSelectedIndex();
              LSizeS.setText(Double.toString(c));
    }//GEN-LAST:event_CBPartSActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frame1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Badd;
    private javax.swing.JButton Bapply;
    private javax.swing.JButton Bbrowse;
    private javax.swing.JButton Bremove;
    private javax.swing.JButton Btarget;
    private javax.swing.JComboBox<String> CBPartS;
    private javax.swing.JLabel LNewFileSizeJ;
    private javax.swing.JLabel LSizeS;
    private javax.swing.JLabel Lclipname;
    private javax.swing.JLabel Llength;
    private javax.swing.JLabel Lmb;
    private javax.swing.JLabel Lname;
    private javax.swing.JLabel Lnewname;
    private javax.swing.JTextField Loutput;
    private javax.swing.JPanel PJoiner;
    private javax.swing.JPanel PSplitter;
    private javax.swing.JTextField TFFilenameS;
    private javax.swing.JTextField TFNewFileJ;
    private javax.swing.JTable TableJ;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane3;
    // End of variables declaration//GEN-END:variables
}
